name: PHP CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: [self-hosted, macOS, ARM64]
    
    strategy:
      matrix:
        php-version: ['7.4', '8.0', '8.1', '8.2', '8.3']
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup PHP ${{ matrix.php-version }}
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php-version }}
        extensions: mbstring, intl, json
        ini-values: post_max_size=256M, upload_max_filesize=256M
        coverage: xdebug
        tools: composer:v2
        
    - name: Get composer cache directory
      id: composer-cache
      run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT
      
    - name: Cache composer dependencies
      uses: actions/cache@v4
      with:
        path: ${{ steps.composer-cache.outputs.dir }}
        key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
        restore-keys: ${{ runner.os }}-composer-
        
    - name: Install dependencies
      run: composer install --prefer-dist --no-progress
      
    - name: Run tests
      run: composer test
      
    - name: Run PHPStan
      run: composer phpstan || true
      
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results-php-${{ matrix.php-version }}
        path: tests/results/
        
  code-quality:
    runs-on: [self-hosted, macOS, ARM64]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup PHP 8.1
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.1'
        extensions: mbstring, intl, json
        tools: composer:v2, phpcs, phpstan
        
    - name: Install dependencies
      run: composer install --prefer-dist --no-progress
      
    - name: Run PHP CodeSniffer
      run: composer phpcs || true
      
    - name: Run PHPStan
      run: composer phpstan || true
      
    - name: Generate documentation
      run: composer docs || true